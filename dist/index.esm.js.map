{"version":3,"file":"index.esm.js","sources":["../src/components/ImageWithColorSwap/ImageWithColorSwap.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\ninterface ImageWithColorSwapProps {\r\n  src: string;\r\n  fromColor: string;\r\n  toColor: string;\r\n  threshold?: number;\r\n  alt?: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  width?: number;\r\n}\r\n\r\ntype RGB = [number, number, number];\r\n\r\n// Cache for processed images\r\nconst processedImageCache = new Map<string, string>();\r\n\r\nconst hexToRgb = (hex: string): RGB => {\r\n  const cleanHex = hex.replace(\"#\", \"\");\r\n  return [\r\n    parseInt(cleanHex.substr(0, 2), 16),\r\n    parseInt(cleanHex.substr(2, 2), 16),\r\n    parseInt(cleanHex.substr(4, 2), 16),\r\n  ];\r\n};\r\n\r\nconst processImage = (\r\n  src: string,\r\n  fromColorRGB: RGB,\r\n  toColorRGB: RGB,\r\n  threshold: number\r\n): Promise<string> => {\r\n  // Generate cache key\r\n  const cacheKey = `${src}-${fromColorRGB.join()}-${toColorRGB.join()}-${threshold}`;\r\n  \r\n  // Check cache first\r\n  if (processedImageCache.has(cacheKey)) {\r\n    return Promise.resolve(processedImageCache.get(cacheKey)!);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    const image = new Image();\r\n    image.crossOrigin = \"Anonymous\";\r\n\r\n    image.onload = () => {\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n      ctx?.drawImage(image, 0, 0);\r\n\r\n      const imageData = ctx?.getImageData(0, 0, canvas.width, canvas.height);\r\n      if (!imageData) return reject('Could not get image data');\r\n\r\n      const data = imageData.data;\r\n      const isMatchingColor = (r: number, g: number, b: number): boolean => {\r\n        const [targetR, targetG, targetB] = fromColorRGB;\r\n        const distance = Math.sqrt(\r\n          Math.pow(r - targetR, 2) + \r\n          Math.pow(g - targetG, 2) + \r\n          Math.pow(b - targetB, 2)\r\n        );\r\n        return distance < (threshold * 441.67) / 100;\r\n      };\r\n\r\n      for (let i = 0; i < data.length; i += 4) {\r\n        if (isMatchingColor(data[i], data[i + 1], data[i + 2])) {\r\n          data[i] = toColorRGB[0];\r\n          data[i + 1] = toColorRGB[1];\r\n          data[i + 2] = toColorRGB[2];\r\n        }\r\n      }\r\n\r\n      ctx?.putImageData(imageData, 0, 0);\r\n      const processedSrc = canvas.toDataURL();\r\n      \r\n      // Store in cache\r\n      processedImageCache.set(cacheKey, processedSrc);\r\n      resolve(processedSrc);\r\n    };\r\n\r\n    image.onerror = () => reject('Error loading image');\r\n    image.src = src;\r\n  });\r\n};\r\n\r\nconst ImageWithColorSwap: React.FC<ImageWithColorSwapProps> = ({\r\n  src,\r\n  fromColor,\r\n  toColor,\r\n  threshold = 60,\r\n  alt = \"Processed image\",\r\n  className,\r\n  style,\r\n  width = 500,\r\n}) => {\r\n  const processedSrc = useMemo(() => {\r\n    const fromColorRGB = hexToRgb(fromColor);\r\n    const toColorRGB = hexToRgb(toColor);\r\n    \r\n    // Start processing and return a placeholder while processing\r\n    processImage(src, fromColorRGB, toColorRGB, threshold)\r\n      .then(newSrc => {\r\n        const img = document.querySelector(`[data-src=\"${src}\"]`) as HTMLImageElement;\r\n        if (img) img.src = newSrc;\r\n      })\r\n      .catch(console.error);\r\n\r\n    // Return cached version if available\r\n    const cacheKey = `${src}-${fromColorRGB.join()}-${toColorRGB.join()}-${threshold}`;\r\n    return processedImageCache.get(cacheKey) || src;\r\n  }, [src, fromColor, toColor, threshold]);\r\n\r\n  return (\r\n    <div style={{ width: width, aspectRatio: '1' }}>\r\n      <img\r\n        data-src={src}\r\n        src={processedSrc}\r\n        alt={alt}\r\n        className={className}\r\n        style={{ ...style, width: '100%', height: '100%', objectFit: 'contain' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageWithColorSwap;\r\n"],"names":[],"mappings":"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"}